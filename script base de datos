SET FOREIGN_KEY_CHECKS = 0;

-- Eliminar todas las tablas
DROP TABLE IF EXISTS configuracion_sistema;
DROP TABLE IF EXISTS api_requests_log;
DROP TABLE IF EXISTS api_keys;
DROP TABLE IF EXISTS informes;
DROP TABLE IF EXISTS suscripciones_newsletter;
DROP TABLE IF EXISTS contactos_cliente;
DROP TABLE IF EXISTS productos_promocion;
DROP TABLE IF EXISTS promociones;
DROP TABLE IF EXISTS seguimiento_envio;
DROP TABLE IF EXISTS envios;
DROP TABLE IF EXISTS transportistas;
DROP TABLE IF EXISTS empresa_transporte;
DROP TABLE IF EXISTS detalles_devolucion;
DROP TABLE IF EXISTS devoluciones;
DROP TABLE IF EXISTS webpay_transacciones;
DROP TABLE IF EXISTS pagos;
DROP TABLE IF EXISTS documentos_tributarios;
DROP TABLE IF EXISTS historico_estados_pedido;
DROP TABLE IF EXISTS detalles_pedido;
DROP TABLE IF EXISTS pedidos;
DROP TABLE IF EXISTS movimientos_inventario;
DROP TABLE IF EXISTS inventario;
DROP TABLE IF EXISTS historial_precios;
DROP TABLE IF EXISTS productos;
DROP TABLE IF EXISTS proveedores;
DROP TABLE IF EXISTS marcas;
DROP TABLE IF EXISTS categorias;
DROP TABLE IF EXISTS tipos_cambio;
DROP TABLE IF EXISTS divisas;
DROP TABLE IF EXISTS historial_sesiones;
DROP TABLE IF EXISTS contador;
DROP TABLE IF EXISTS bodeguero;
DROP TABLE IF EXISTS vendedor;
DROP TABLE IF EXISTS administrador;
DROP TABLE IF EXISTS cliente;
DROP TABLE IF EXISTS permisos_role;
DROP TABLE IF EXISTS roles_usuario;
DROP TABLE IF EXISTS roles;
DROP TABLE IF EXISTS credenciales;
DROP TABLE IF EXISTS usuario;
DROP TABLE IF EXISTS sucursales;

SET FOREIGN_KEY_CHECKS = 1;

-- =============================================
-- SECCIÓN 2: CREACIÓN DE TABLAS (MySQL)
-- =============================================

-- DOMINIO: ESTRUCTURA ORGANIZACIONAL
CREATE TABLE sucursales (
    ID_Sucursal INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Direccion VARCHAR(200) NOT NULL,
    Ciudad VARCHAR(50) NOT NULL,
    Region VARCHAR(50) NOT NULL,
    Telefono VARCHAR(20),
    Email VARCHAR(100),
    Horario_Atencion VARCHAR(200),
    Estado VARCHAR(20) DEFAULT 'Activa',
    Latitud DECIMAL(10,6),
    Longitud DECIMAL(10,6),
    
    CHECK (Estado IN ('Activa', 'Inactiva'))
);

-- DOMINIO: USUARIOS Y PERSONAL
CREATE TABLE usuario (
    ID_Usuario INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    RUT VARCHAR(20) UNIQUE,
    Telefono VARCHAR(20),
    Direccion VARCHAR(200),
    Ciudad VARCHAR(50),
    Region VARCHAR(50),
    Estado VARCHAR(20) DEFAULT 'Activo',
    Fecha_Registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    Ultima_Actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    CHECK (Estado IN ('Activo', 'Inactivo', 'Suspendido'))
);

CREATE TABLE credenciales (
    ID_Credencial INT AUTO_INCREMENT PRIMARY KEY,
    ID_Usuario INT NOT NULL,
    Username VARCHAR(50) UNIQUE NOT NULL,
    Password_Hash VARCHAR(255) NOT NULL,
    Primer_Inicio TINYINT(1) DEFAULT 1,
    Fecha_Ultimo_Cambio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Fecha_Expiracion DATE
);

CREATE TABLE roles (
    ID_Role INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(50) NOT NULL UNIQUE,
    Descripcion VARCHAR(200)
);

CREATE TABLE roles_usuario (
    ID_Role_Usuario INT AUTO_INCREMENT PRIMARY KEY,
    ID_Usuario INT NOT NULL,
    ID_Role INT NOT NULL,
    Fecha_Asignacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    UNIQUE KEY uk_usuario_role (ID_Usuario, ID_Role)
);

CREATE TABLE permisos_role (
    ID_Permiso_Role INT AUTO_INCREMENT PRIMARY KEY,
    ID_Role INT NOT NULL,
    Modulo VARCHAR(50) NOT NULL,
    Accion VARCHAR(50) NOT NULL,
    
    UNIQUE KEY uk_role_modulo_accion (ID_Role, Modulo, Accion)
);

CREATE TABLE cliente (
    ID_Cliente INT AUTO_INCREMENT PRIMARY KEY,
    ID_Usuario INT NOT NULL,
    Tipo_Cliente VARCHAR(20) DEFAULT 'Regular',
    Suscrito_Newsletter TINYINT(1) DEFAULT 0,
    Limite_Credito DECIMAL(10,2) DEFAULT 0,
    
    CHECK (Tipo_Cliente IN ('Regular', 'Preferente', 'Corporativo'))
);

CREATE TABLE administrador (
    ID_Administrador INT AUTO_INCREMENT PRIMARY KEY,
    ID_Usuario INT NOT NULL,
    Fecha_Contratacion DATE,
    Nivel_Acceso VARCHAR(20),
    
    CHECK (Nivel_Acceso IN ('Local', 'Regional', 'Nacional'))
);

CREATE TABLE vendedor (
    ID_Vendedor INT AUTO_INCREMENT PRIMARY KEY,
    ID_Usuario INT NOT NULL,
    ID_Sucursal INT NOT NULL,
    Codigo_Vendedor VARCHAR(20) UNIQUE,
    Meta_Ventas DECIMAL(10,2)
);

CREATE TABLE bodeguero (
    ID_Bodeguero INT AUTO_INCREMENT PRIMARY KEY,
    ID_Usuario INT NOT NULL,
    ID_Sucursal INT NOT NULL,
    Area_Asignada VARCHAR(50)
);

CREATE TABLE contador (
    ID_Contador INT AUTO_INCREMENT PRIMARY KEY,
    ID_Usuario INT NOT NULL,
    Certificacion VARCHAR(100)
);

CREATE TABLE historial_sesiones (
    ID_Sesion INT AUTO_INCREMENT PRIMARY KEY,
    ID_Usuario INT NOT NULL,
    Fecha_Inicio TIMESTAMP NOT NULL,
    Fecha_Fin TIMESTAMP NULL,
    Direccion_IP VARCHAR(50),
    Dispositivo VARCHAR(100)
);

-- DOMINIO: CATÁLOGO DE PRODUCTOS
CREATE TABLE divisas (
    ID_Divisa INT AUTO_INCREMENT PRIMARY KEY,
    Codigo VARCHAR(10) NOT NULL UNIQUE,
    Nombre VARCHAR(50) NOT NULL,
    Simbolo VARCHAR(5) NOT NULL,
    Es_Default TINYINT(1) DEFAULT 0
);

CREATE TABLE tipos_cambio (
    ID_Tipo_Cambio INT AUTO_INCREMENT PRIMARY KEY,
    ID_Divisa_Origen INT NOT NULL,
    ID_Divisa_Destino INT NOT NULL,
    Fecha DATE NOT NULL,
    Tasa_Cambio DECIMAL(14,6) NOT NULL,
    Fuente VARCHAR(100) DEFAULT 'Banco Central de Chile',
    
    UNIQUE KEY uk_divisas_fecha (ID_Divisa_Origen, ID_Divisa_Destino, Fecha)
);

CREATE TABLE categorias (
    ID_Categoria INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Descripcion VARCHAR(500),
    ID_Categoria_Padre INT,
    Nivel INT NOT NULL,
    Icono_URL VARCHAR(255),
    Orden_Visualizacion INT
);

CREATE TABLE marcas (
    ID_Marca INT PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Descripcion VARCHAR(500),
    Logo_URL VARCHAR(255),
    Pais_Origen VARCHAR(50),
    Sitio_Web VARCHAR(255)
);

CREATE TABLE proveedores (
    ID_Proveedor INT PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    RUT VARCHAR(20) UNIQUE NOT NULL,
    Contacto_Nombre VARCHAR(100),
    Contacto_Email VARCHAR(100),
    Contacto_Telefono VARCHAR(20),
    Direccion VARCHAR(200),
    Pais VARCHAR(50),
    Tiempo_Entrega_Promedio INT,
    Condiciones_Pago VARCHAR(200)
);

CREATE TABLE productos (
    ID_Producto INT AUTO_INCREMENT PRIMARY KEY,
    Codigo VARCHAR(20) UNIQUE NOT NULL,
    Nombre VARCHAR(150) NOT NULL,
    Descripcion VARCHAR(1000),
    Especificaciones TEXT,
    ID_Categoria INT NOT NULL,
    ID_Marca INT NOT NULL,
    ID_Proveedor INT,
    Codigo_Proveedor VARCHAR(50),
    ID_Divisa INT NOT NULL,
    Precio_Compra DECIMAL(10,2),
    Precio_Venta DECIMAL(10,2) NOT NULL,
    Descuento_Maximo DECIMAL(5,2),
    Tasa_Impuesto DECIMAL(5,2) DEFAULT 19,
    Peso DECIMAL(8,2),
    Dimensiones VARCHAR(50),
    Imagen_URL VARCHAR(255),
    Destacado TINYINT(1) DEFAULT 0,
    Estado VARCHAR(20) DEFAULT 'Activo',
    Fecha_Creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    Ultima_Actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    CHECK (Estado IN ('Activo', 'Inactivo', 'Descontinuado'))
);

CREATE TABLE historial_precios (
    ID_Historial INT AUTO_INCREMENT PRIMARY KEY,
    ID_Producto INT NOT NULL,
    Precio_Anterior DECIMAL(10,2),
    Precio_Nuevo DECIMAL(10,2) NOT NULL,
    ID_Divisa INT NOT NULL,
    Fecha_Cambio TIMESTAMP NOT NULL,
    ID_Administrador INT,
    Motivo VARCHAR(200)
);

-- DOMINIO: INVENTARIO
CREATE TABLE inventario (
    ID_Inventario INT AUTO_INCREMENT PRIMARY KEY,
    ID_Producto INT NOT NULL,
    ID_Sucursal INT NOT NULL,
    Stock_Actual INT DEFAULT 0 NOT NULL,
    Stock_Minimo INT DEFAULT 0 NOT NULL,
    Stock_Maximo INT,
    Stock_Reservado INT DEFAULT 0 NOT NULL,
    Punto_Reorden INT,
    Ubicacion_Almacen VARCHAR(50),
    Ultima_Actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    ID_Bodeguero INT,
    
    UNIQUE KEY uk_inventario_producto_sucursal (ID_Producto, ID_Sucursal)
);

CREATE TABLE movimientos_inventario (
    ID_Movimiento INT AUTO_INCREMENT PRIMARY KEY,
    ID_Inventario INT NOT NULL,
    Tipo_Movimiento VARCHAR(30) NOT NULL,
    Cantidad INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ID_Pedido INT,
    ID_Devolucion INT,
    ID_Bodeguero INT,
    Comentario VARCHAR(500),
    ID_Sucursal_Destino INT,
    
    CHECK (Tipo_Movimiento IN ('Entrada', 'Salida', 'Ajuste', 'Reserva', 'Transferencia'))
);

-- DOMINIO: VENTAS Y PEDIDOS
CREATE TABLE pedidos (
    ID_Pedido INT AUTO_INCREMENT PRIMARY KEY,
    Codigo_Pedido VARCHAR(20) UNIQUE NOT NULL,
    ID_Cliente INT NOT NULL,
    ID_Vendedor INT,
    ID_Sucursal INT NOT NULL,
    Fecha_Pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    Canal VARCHAR(20),
    Estado VARCHAR(30) DEFAULT 'Pendiente',
    Metodo_Entrega VARCHAR(20),
    Direccion_Entrega VARCHAR(200),
    Ciudad_Entrega VARCHAR(50),
    Region_Entrega VARCHAR(50),
    Pais_Entrega VARCHAR(50) DEFAULT 'Chile',
    Comentarios VARCHAR(500),
    Subtotal DECIMAL(10,2) NOT NULL,
    Descuento DECIMAL(10,2) DEFAULT 0 NOT NULL,
    Impuestos DECIMAL(10,2) DEFAULT 0 NOT NULL,
    Costo_Envio DECIMAL(10,2) DEFAULT 0 NOT NULL,
    Total DECIMAL(10,2) NOT NULL,
    ID_Divisa INT NOT NULL,
    Fecha_Estimada_Entrega DATE,
    Prioridad VARCHAR(20) DEFAULT 'Normal',
    
    CHECK (Canal IN ('Online', 'Físico')),
    CHECK (Estado IN ('Pendiente', 'Aprobado', 'En_Preparacion', 'Listo_Para_Entrega', 'En_Ruta', 'Entregado', 'Cancelado', 'Devuelto')),
    CHECK (Metodo_Entrega IN ('Retiro_Tienda', 'Despacho_Domicilio')),
    CHECK (Prioridad IN ('Baja', 'Normal', 'Alta', 'Urgente'))
);

CREATE TABLE detalles_pedido (
    ID_Detalle INT AUTO_INCREMENT PRIMARY KEY,
    ID_Pedido INT NOT NULL,
    ID_Producto INT NOT NULL,
    Cantidad INT NOT NULL,
    Precio_Unitario DECIMAL(10,2) NOT NULL,
    Descuento DECIMAL(10,2) DEFAULT 0 NOT NULL,
    Impuesto DECIMAL(10,2) DEFAULT 0 NOT NULL,
    Subtotal DECIMAL(10,2) NOT NULL,
    Estado VARCHAR(20) DEFAULT 'Pendiente',
    
    CHECK (Estado IN ('Pendiente', 'Preparado', 'Entregado', 'Devuelto'))
);

-- =============================================
-- SECCIÓN 3: FOREIGN KEYS
-- =============================================

-- Usuario y Credenciales
ALTER TABLE credenciales ADD CONSTRAINT fk_credencial_usuario FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_Usuario);
ALTER TABLE roles_usuario ADD CONSTRAINT fk_roleusuario_usuario FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_Usuario);
ALTER TABLE roles_usuario ADD CONSTRAINT fk_roleusuario_role FOREIGN KEY (ID_Role) REFERENCES roles(ID_Role);
ALTER TABLE permisos_role ADD CONSTRAINT fk_permiso_role FOREIGN KEY (ID_Role) REFERENCES roles(ID_Role);

-- Tipos de Usuario
ALTER TABLE cliente ADD CONSTRAINT fk_cliente_usuario FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_Usuario);
ALTER TABLE administrador ADD CONSTRAINT fk_admin_usuario FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_Usuario);
ALTER TABLE vendedor ADD CONSTRAINT fk_vendedor_usuario FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_Usuario);
ALTER TABLE vendedor ADD CONSTRAINT fk_vendedor_sucursal FOREIGN KEY (ID_Sucursal) REFERENCES sucursales(ID_Sucursal);
ALTER TABLE bodeguero ADD CONSTRAINT fk_bodeguero_usuario FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_Usuario);
ALTER TABLE bodeguero ADD CONSTRAINT fk_bodeguero_sucursal FOREIGN KEY (ID_Sucursal) REFERENCES sucursales(ID_Sucursal);
ALTER TABLE contador ADD CONSTRAINT fk_contador_usuario FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_Usuario);
ALTER TABLE historial_sesiones ADD CONSTRAINT fk_sesion_usuario FOREIGN KEY (ID_Usuario) REFERENCES usuario(ID_Usuario);

-- Catálogo
ALTER TABLE categorias ADD CONSTRAINT fk_categoria_padre FOREIGN KEY (ID_Categoria_Padre) REFERENCES categorias(ID_Categoria);
ALTER TABLE tipos_cambio ADD CONSTRAINT fk_tipocambio_origen FOREIGN KEY (ID_Divisa_Origen) REFERENCES divisas(ID_Divisa);
ALTER TABLE tipos_cambio ADD CONSTRAINT fk_tipocambio_destino FOREIGN KEY (ID_Divisa_Destino) REFERENCES divisas(ID_Divisa);
ALTER TABLE productos ADD CONSTRAINT fk_producto_categoria FOREIGN KEY (ID_Categoria) REFERENCES categorias(ID_Categoria);
ALTER TABLE productos ADD CONSTRAINT fk_producto_marca FOREIGN KEY (ID_Marca) REFERENCES marcas(ID_Marca);
ALTER TABLE productos ADD CONSTRAINT fk_producto_proveedor FOREIGN KEY (ID_Proveedor) REFERENCES proveedores(ID_Proveedor);
ALTER TABLE productos ADD CONSTRAINT fk_producto_divisa FOREIGN KEY (ID_Divisa) REFERENCES divisas(ID_Divisa);
ALTER TABLE historial_precios ADD CONSTRAINT fk_historial_producto FOREIGN KEY (ID_Producto) REFERENCES productos(ID_Producto);
ALTER TABLE historial_precios ADD CONSTRAINT fk_historial_divisa FOREIGN KEY (ID_Divisa) REFERENCES divisas(ID_Divisa);
ALTER TABLE historial_precios ADD CONSTRAINT fk_historial_admin FOREIGN KEY (ID_Administrador) REFERENCES administrador(ID_Administrador);

-- Inventario
ALTER TABLE inventario ADD CONSTRAINT fk_inventario_producto FOREIGN KEY (ID_Producto) REFERENCES productos(ID_Producto);
ALTER TABLE inventario ADD CONSTRAINT fk_inventario_sucursal FOREIGN KEY (ID_Sucursal) REFERENCES sucursales(ID_Sucursal);
ALTER TABLE inventario ADD CONSTRAINT fk_inventario_bodeguero FOREIGN KEY (ID_Bodeguero) REFERENCES bodeguero(ID_Bodeguero);
ALTER TABLE movimientos_inventario ADD CONSTRAINT fk_movimiento_inventario FOREIGN KEY (ID_Inventario) REFERENCES inventario(ID_Inventario);
ALTER TABLE movimientos_inventario ADD CONSTRAINT fk_movimiento_bodeguero FOREIGN KEY (ID_Bodeguero) REFERENCES bodeguero(ID_Bodeguero);
ALTER TABLE movimientos_inventario ADD CONSTRAINT fk_movimiento_sucursal FOREIGN KEY (ID_Sucursal_Destino) REFERENCES sucursales(ID_Sucursal);

-- Ventas
ALTER TABLE pedidos ADD CONSTRAINT fk_pedido_cliente FOREIGN KEY (ID_Cliente) REFERENCES cliente(ID_Cliente);
ALTER TABLE pedidos ADD CONSTRAINT fk_pedido_vendedor FOREIGN KEY (ID_Vendedor) REFERENCES vendedor(ID_Vendedor);
ALTER TABLE pedidos ADD CONSTRAINT fk_pedido_sucursal FOREIGN KEY (ID_Sucursal) REFERENCES sucursales(ID_Sucursal);
ALTER TABLE pedidos ADD CONSTRAINT fk_pedido_divisa FOREIGN KEY (ID_Divisa) REFERENCES divisas(ID_Divisa);
ALTER TABLE detalles_pedido ADD CONSTRAINT fk_detalle_pedido FOREIGN KEY (ID_Pedido) REFERENCES pedidos(ID_Pedido);
ALTER TABLE detalles_pedido ADD CONSTRAINT fk_detalle_producto FOREIGN KEY (ID_Producto) REFERENCES productos(ID_Producto);
ALTER TABLE movimientos_inventario ADD CONSTRAINT fk_movimiento_pedido FOREIGN KEY (ID_Pedido) REFERENCES pedidos(ID_Pedido);

-- =============================================
-- DATOS INICIALES
-- =============================================

-- Sucursales
INSERT INTO sucursales (Nombre, Direccion, Ciudad, Region, Estado) VALUES
('Sucursal Central', 'Av. Providencia 1234', 'Santiago', 'Metropolitana', 'Activa'),
('Sucursal Norte', 'Av. Independencia 567', 'Santiago', 'Metropolitana', 'Activa'),
('Sucursal Sur', 'Gran Avenida 890', 'San Miguel', 'Metropolitana', 'Activa');

-- Divisas
INSERT INTO divisas (Codigo, Nombre, Simbolo, Es_Default) VALUES
('CLP', 'Peso Chileno', '$', 1),
('USD', 'Dólar Estadounidense', 'US$', 0),
('EUR', 'Euro', '€', 0);

-- Categorías
INSERT INTO categorias (Nombre, Descripcion, Nivel, Orden_Visualizacion) VALUES
('Electrónicos', 'Productos electrónicos y tecnológicos', 1, 1),
('Ferretería', 'Herramientas y materiales de construcción', 1, 2),
('Hogar', 'Productos para el hogar y decoración', 1, 3);

-- Marcas
INSERT INTO marcas (ID_Marca, Nombre, Descripcion, Pais_Origen) VALUES
(1, 'Samsung', 'Tecnología y electrónicos', 'Corea del Sur'),
(2, 'Apple', 'Productos tecnológicos premium', 'Estados Unidos'),
(3, 'Bosch', 'Herramientas profesionales', 'Alemania');

-- Proveedores
INSERT INTO proveedores (ID_Proveedor, Nombre, RUT, Contacto_Email, Pais) VALUES
(1, 'TechSupply Chile', '12345678-9', 'contacto@techsupply.cl', 'Chile'),
(2, 'Ferretería Central', '98765432-1', 'ventas@ferrecentral.cl', 'Chile');

-- Roles
INSERT INTO roles (Nombre, Descripcion) VALUES
('Administrador', 'Acceso completo al sistema'),
('Vendedor', 'Gestión de ventas y clientes'),
('Bodeguero', 'Gestión de inventario'),
('Cliente', 'Cliente del sistema');

-- Usuarios base
INSERT INTO usuario (Nombre, Email, RUT, Estado) VALUES
('Admin Sistema', 'admin@ferremas.cl', '12345678-9', 'Activo'),
('Vendedor 1', 'vendedor1@ferremas.cl', '98765432-1', 'Activo'),
('Cliente Test', 'cliente@test.com', '11111111-1', 'Activo');

-- VERIFICACIÓN
SELECT 'SCRIPT MYSQL COMPLETADO' as Status;
SHOW TABLES;